pipeline:
  name: Model-Training-Pipeline
description: Detects changed files into a repository and triggers a model retraining on that dataset
input:
  pfs:
    name: mri_raw_data
    repo: mri_raw_data
    branch: branch_v1
    glob: /
    empty_files: false
reprocess_spec: until_success                          # reprocess every datum even the input datums have not change. Another value is "until_success" and "every_job"
transform:
  cmd: # the cmd is repeatedly executed for every datum under the same job.
    - sh
    - "-c"
    - "git clone https://github.com/boon1987/brain_mri.git /code && python3 /code/pds_version/container/train/train.py --git-url https://git@github.com:/hpelabssg/pdk-use-cases.git --git-ref main --sub-dir brain-mri/experiment --pach_config '/code/pds_version/pipelines/training-pipeline.yml' --config const.yaml --pach_project_name 'Brain-MRI' --repo mri_raw_data --branch 'branch_v1' --model brain-mri --work-dir /code/pds_version/experiment && rm -rf /code"  #cmd:
  #    - /bin/sh
  #stdin:
  #    - 'python train.py --git-url https://git@github.com:/hpelabssg/pdk-use-cases.git --git-ref main --sub-dir brain-mri/experiment --config const.yaml --repo brain-mri-data --model brain-mri --project pdk-brain-mri'
  #image: "hpelabssg/pds:train_0.0.1"
  image: "hpelabssg/pdk:train_0.0.1"
  secrets:
    - name: pachyderm-determined-secret
      key: determined-master
      env_var: DET_MASTER
    - name: pachyderm-determined-secret
      key: determined-username
      env_var: DET_USER
    - name: pachyderm-determined-secret
      key: determined-password
      env_var: DET_PASSWORD
    # - name: pachyderm-determined-secret
    #   key: pac-token
    #   env_var: PAC_TOKEN
    - name: pachyderm-determined-secret
      key: pachyderm-host
      env_var: PACHD_LB_SERVICE_HOST
    - name: pachyderm-determined-secret
      key: pachyderm-port
      env_var: PACHD_LB_SERVICE_PORT
pod_patch: '[{"op": "add","path": "/volumes/-","value": {"name": "det-checkpoints","hostpath": {"path": "/mnt/mapr_nfs/determined/checkpoints","type": "DirectoryOrCreate"}}}, {"op": "add","path": "/containers/0/volumeMounts/-","value": {"mountPath": "/determined_shared_fs","name": "det-checkpoints"}}]'

